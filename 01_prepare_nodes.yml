---
- name: Prepare all Kubernetes nodes
  hosts: k8s_all
  become: yes
  vars:
    k8s_version: "1.28.5"
  tasks:
    - name: Ensure required packages and apt update
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Disable swap (runtime) and persist in fstab
      shell: |
        swapoff -a
        sed -i.bak '/\sswap\s/ s/^/#/' /etc/fstab
      args:
        warn: false

    - name: Ensure required kernel modules will be loaded
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Load kernel modules now
      modprobe:
        name: "{{ item }}"
      loop:
        - overlay
        - br_netfilter

    - name: Set recommended sysctl params
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_set: yes
        state: present
        reload: yes
      loop:
        - { key: 'net.bridge.bridge-nf-call-iptables', value: 1 }
        - { key: 'net.bridge.bridge-nf-call-ip6tables', value: 1 }
        - { key: 'net.ipv4.ip_forward', value: 1 }

    - name: Install containerd (use distro package) and tools
      apt:
        name:
          - containerd
          - conntrack
        state: present
        update_cache: yes

    - name: Create default containerd config and set systemd cgroup driver
      command: "containerd config default"
      register: containerd_default
      changed_when: false

    - name: Write containerd config with systemd cgroup
      copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_default.stdout | default('') }}\n"
      when: containerd_default.stdout is defined

    - name: Ensure SystemdCgroup = true in containerd config
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup\\s*=\\s*false'
        replace: 'SystemdCgroup = true'
      notify: Restart containerd

    - name: Ensure containerd is started
      systemd:
        name: containerd
        enabled: yes
        state: started

    - name: Add Kubernetes apt keyring (new recommended method)
      shell: |
        mkdir -p /etc/apt/keyrings
        curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-archive-keyring.gpg

    - name: Add Kubernetes apt repo
      copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"

    - name: Update apt and install kube packages
      apt:
        update_cache: yes
        name:
          - kubelet={{ k8s_version }}-00
          - kubeadm={{ k8s_version }}-00
          - kubectl={{ k8s_version }}-00
        state: present

    - name: Hold kube packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        force: yes
      register: hold_dummy

  handlers:
    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted
