---
- name: Prepare all Kubernetes nodes
  hosts: k8s_all
  become: yes
  vars:
    k8s_version: "1.33.5"
  tasks:
    - name: Disable swap
      ansible.builtin.command: swapoff -a
      changed_when: false  # Idempotency
    - name: Comment out swap in fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^(\S+\s+\S+\s+swap\s+)'
        replace: '# \1'

    - name: Load kernel modules
      ansible.builtin.copy:
        content: |
          overlay
          br_netfilter
        dest: /etc/modules-load.d/k8s.conf
      notify: Load modules

    - name: Configure sysctl params
      ansible.builtin.copy:
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
        dest: /etc/sysctl.d/k8s.conf
      notify: Apply sysctl

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install containerd
      ansible.builtin.apt:
        name: containerd.io
        state: present
        update_cache: yes

    - name: Configure containerd
      ansible.builtin.template:
        src: containerd_config.toml.j2  # Создайте шаблон или используйте copy
        dest: /etc/containerd/config.toml
        mode: 0644
      notify: Restart containerd
      # Содержимое шаблона: 
      # [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
      #   runtime_type = "io.containerd.runc.v2"
      # [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
      #   SystemdCgroup = true

    - name: Add Kubernetes GPG key
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        state: present

    - name: Add Kubernetes repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
        state: present
        filename: kubernetes

    - name: Install kubeadm, kubelet, kubectl
      ansible.builtin.apt:
        name:
          - kubelet={{ k8s_version }}-00
          - kubeadm={{ k8s_version }}-00
          - kubectl={{ k8s_version }}-00
        state: present

    - name: Hold Kubernetes packages
      ansible.builtin.command: apt-mark hold kubelet kubeadm kubectl
      changed_when: false

    - name: Start and enable kubelet
      ansible.builtin.systemd:
        name: kubelet
        state: started
        enabled: yes

  handlers:
    - name: Load modules
      ansible.builtin.command: "{{ item }}"
      loop:
        - modprobe overlay
        - modprobe br_netfilter
    - name: Apply sysctl
      ansible.builtin.command: sysctl --system
    - name: Restart containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: yes---
- name: Prepare all Kubernetes nodes
  hosts: k8s_all
  become: yes
  vars:
    k8s_version: "1.3.5"
  tasks:
    - name: Disable swap
      ansible.builtin.command: swapoff -a
      changed_when: false  # Idempotency
    - name: Comment out swap in fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^(\S+\s+\S+\s+swap\s+)'
        replace: '# \1'

    - name: Load kernel modules
      ansible.builtin.copy:
        content: |
          overlay
          br_netfilter
        dest: /etc/modules-load.d/k8s.conf
      notify: Load modules

    - name: Configure sysctl params
      ansible.builtin.copy:
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
        dest: /etc/sysctl.d/k8s.conf
      notify: Apply sysctl

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install containerd
      ansible.builtin.apt:
        name: containerd.io
        state: present
        update_cache: yes

    - name: Configure containerd
      ansible.builtin.template:
        src: containerd_config.toml.j2  # Создайте шаблон или используйте copy
        dest: /etc/containerd/config.toml
        mode: 0644
      notify: Restart containerd
      # Содержимое шаблона: 
      # [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
      #   runtime_type = "io.containerd.runc.v2"
      # [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
      #   SystemdCgroup = true

    - name: Add Kubernetes GPG key
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        state: present

    - name: Add Kubernetes repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
        state: present
        filename: kubernetes

    - name: Install kubeadm, kubelet, kubectl
      ansible.builtin.apt:
        name:
          - kubelet={{ k8s_version }}-00
          - kubeadm={{ k8s_version }}-00
          - kubectl={{ k8s_version }}-00
        state: present

    - name: Hold Kubernetes packages
      ansible.builtin.command: apt-mark hold kubelet kubeadm kubectl
      changed_when: false

    - name: Start and enable kubelet
      ansible.builtin.systemd:
        name: kubelet
        state: started
        enabled: yes

  handlers:
    - name: Load modules
      ansible.builtin.command: "{{ item }}"
      loop:
        - modprobe overlay
        - modprobe br_netfilter
    - name: Apply sysctl
      ansible.builtin.command: sysctl --system
    - name: Restart containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: yes
